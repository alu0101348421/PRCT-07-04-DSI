{"/home/usuario/0604/src/revista.ts":{"path":"/home/usuario/0604/src/revista.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":21,"column":8},"end":{"line":21,"column":31}},"3":{"start":{"line":22,"column":8},"end":{"line":22,"column":29}},"4":{"start":{"line":23,"column":8},"end":{"line":23,"column":40}},"5":{"start":{"line":24,"column":8},"end":{"line":24,"column":30}},"6":{"start":{"line":32,"column":8},"end":{"line":32,"column":33}},"7":{"start":{"line":40,"column":8},"end":{"line":40,"column":27}},"8":{"start":{"line":48,"column":8},"end":{"line":48,"column":34}},"9":{"start":{"line":57,"column":8},"end":{"line":62,"column":9}},"10":{"start":{"line":58,"column":12},"end":{"line":58,"column":47}},"11":{"start":{"line":61,"column":12},"end":{"line":61,"column":76}},"12":{"start":{"line":71,"column":22},"end":{"line":71,"column":59}},"13":{"start":{"line":72,"column":8},"end":{"line":77,"column":9}},"14":{"start":{"line":73,"column":12},"end":{"line":73,"column":47}},"15":{"start":{"line":76,"column":12},"end":{"line":76,"column":76}},"16":{"start":{"line":84,"column":8},"end":{"line":86,"column":11}},"17":{"start":{"line":85,"column":12},"end":{"line":85,"column":36}},"18":{"start":{"line":93,"column":8},"end":{"line":93,"column":28}},"19":{"start":{"line":94,"column":8},"end":{"line":94,"column":22}},"20":{"start":{"line":97,"column":0},"end":{"line":97,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":24},"end":{"line":25,"column":5}},"line":20},"1":{"name":"(anonymous_1)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":22},"end":{"line":33,"column":5}},"line":31},"2":{"name":"(anonymous_2)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":16},"end":{"line":41,"column":5}},"line":39},"3":{"name":"(anonymous_3)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":23},"end":{"line":49,"column":5}},"line":47},"4":{"name":"(anonymous_4)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":25},"end":{"line":63,"column":5}},"line":56},"5":{"name":"(anonymous_5)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":28},"end":{"line":78,"column":5}},"line":70},"6":{"name":"(anonymous_6)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":13},"end":{"line":87,"column":5}},"line":83},"7":{"name":"(anonymous_7)","decl":{"start":{"line":84,"column":34},"end":{"line":84,"column":35}},"loc":{"start":{"line":84,"column":50},"end":{"line":86,"column":9}},"line":84},"8":{"name":"(anonymous_8)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":19},"end":{"line":95,"column":5}},"line":92}},"branchMap":{"0":{"loc":{"start":{"line":57,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":62,"column":9}},{"start":{"line":57,"column":8},"end":{"line":62,"column":9}}],"line":57},"1":{"loc":{"start":{"line":72,"column":8},"end":{"line":77,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":77,"column":9}},{"start":{"line":72,"column":8},"end":{"line":77,"column":9}}],"line":72}},"s":{"0":1,"1":1,"2":12,"3":12,"4":12,"5":12,"6":7,"7":6,"8":1,"9":6,"10":5,"11":1,"12":2,"13":2,"14":1,"15":1,"16":3,"17":3,"18":3,"19":3,"20":1},"f":{"0":12,"1":7,"2":6,"3":1,"4":6,"5":2,"6":3,"7":3,"8":3},"b":{"0":[5,1],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/0604/src/revista.ts","sources":["/home/usuario/0604/src/revista.ts"],"names":[],"mappings":";;;AAEA;;;;;;;;GAQG;AACH,MAAa,OAAO;IAMlB;;;;;OAKG;IACH,YAAY,MAAc;QAXlB,iBAAY,GAAe,EAAE,CAAC;QAYpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IACxB,CAAC;IAED;;;;OAIG;IACI,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACI,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACI,gBAAgB;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED;;;;;OAKG;IACI,QAAQ,CAAC,UAAoB;QAClC,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;YAChD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACpC;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;SACjE;IACH,CAAC;IAED;;;;;OAKG;IACI,WAAW,CAAC,UAAoB;QACrC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACpD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACpC;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;SACjE;IACH,CAAC;IAED;;;OAGG;IACI,MAAM;QACX,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE;YACvC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACI,YAAY;QACjB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;CACF;AA5FD,0BA4FC","sourcesContent":["import {Observable, Observer} from './interfaces';\n\n/**\n * Clase que representa una revista con sus suscriptores.\n * @class Revista\n * @implements {Observable}\n * @attributes {number} numeroActual - Número actual de la revista.\n * @attributes {string} nombre - Nombre de la revista.\n * @attributes {Date} fechaCreacion - Fecha de creación de la revista.\n * @attributes {Observer[]} suscriptores - Suscriptores de la revista.\n */\nexport class Revista implements Observable {\n  private suscriptores: Observer[] = [];\n  private numeroActual: number;\n  private nombre: string;\n  private fechaCreacion: Date;\n\n  /**\n   * Crea una nueva instancia de la clase Revista.\n   * @param {string} nombre - Nombre de la revista.\n   * @memberof Revista\n   * @constructor\n   */\n  constructor(nombre: string) {\n    this.nombre = nombre;\n    this.fechaCreacion = new Date();\n    this.numeroActual = 0;\n  }\n\n  /**\n   * Devuelve el número actual de la revista.\n   * @returns {number} Número actual de la revista.\n   * @memberof Revista\n   */\n  public getNumeroActual(): number {\n    return this.numeroActual;\n  }\n\n  /**\n   * Devuelve el nombre de la revista.\n   * @returns {string} Nombre de la revista.\n   * @memberof Revista\n   */\n  public getNombre(): string {\n    return this.nombre;\n  }\n\n  /**\n   * {Date} Fecha de creación de la revista.\n   * @returns {Date} Fecha de creación de la revista.\n   * @memberof Revista\n   */\n  public getFechaCreacion(): Date {\n    return this.fechaCreacion;\n  }\n\n  /**\n   * Suscribe un suscriptor a la revista.\n   * @param {Observer} suscriptor - Suscriptor a suscribir.\n   * @memberof Revista\n   * @throws {Error} Si el suscriptor ya está suscrito a la revista.\n   */\n  public suscribe(suscriptor: Observer): void {\n    if (this.suscriptores.indexOf(suscriptor) === -1) {\n      this.suscriptores.push(suscriptor);\n    } else {\n      throw new Error('El suscriptor ya está suscrito a la revista.');\n    }\n  }\n\n  /**\n   * Desuscribe un suscriptor de la revista.\n   * @param suscriptor - Suscriptor a desuscribir.\n   * @memberof Revista\n   * @throws {Error} Si el suscriptor no está suscrito a la revista.\n   */\n  public unsubscribe(suscriptor: Observer): void {\n    const index = this.suscriptores.indexOf(suscriptor);\n    if (index !== -1) {\n      this.suscriptores.splice(index, 1);\n    } else {\n      throw new Error('El suscriptor no está suscrito a la revista.');\n    }\n  }\n\n  /**\n   * Notifica a los suscriptores de la revista.\n   * @memberof Revista\n   */\n  public notify(): void {\n    this.suscriptores.forEach((suscriptor) => {\n      suscriptor.update(this);\n    });\n  }\n\n  /**\n   * Lanza un número al mercado.\n   * @memberof Revista\n   */\n  public lanzarNumero(): void {\n    this.numeroActual++;\n    this.notify();\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ea57cc292b3eea838e48b662018d9b71e014f307","contentHash":"19cc1bfb89a310e9c9987ea19114921a85a732cdcb6c3be9630eb49eb7718ae5"},"/home/usuario/0604/src/suscriptor.ts":{"path":"/home/usuario/0604/src/suscriptor.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":38}},"3":{"start":{"line":21,"column":8},"end":{"line":21,"column":29}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":37}},"5":{"start":{"line":31,"column":8},"end":{"line":36,"column":9}},"6":{"start":{"line":32,"column":12},"end":{"line":32,"column":126}},"7":{"start":{"line":35,"column":12},"end":{"line":35,"column":62}},"8":{"start":{"line":44,"column":8},"end":{"line":44,"column":27}},"9":{"start":{"line":52,"column":8},"end":{"line":52,"column":31}},"10":{"start":{"line":55,"column":0},"end":{"line":55,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":36},"end":{"line":23,"column":5}},"line":20},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":23},"end":{"line":37,"column":5}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":16},"end":{"line":45,"column":5}},"line":43},"3":{"name":"(anonymous_3)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":18},"end":{"line":53,"column":5}},"line":51}},"branchMap":{"0":{"loc":{"start":{"line":31,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":36,"column":9}},{"start":{"line":31,"column":8},"end":{"line":36,"column":9}}],"line":31}},"s":{"0":1,"1":1,"2":1,"3":8,"4":8,"5":5,"6":5,"7":0,"8":2,"9":1,"10":1},"f":{"0":8,"1":5,"2":2,"3":1},"b":{"0":[5,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/0604/src/suscriptor.ts","sources":["/home/usuario/0604/src/suscriptor.ts"],"names":[],"mappings":";;;AACA,uCAAkC;AAElC;;;;;;GAMG;AACH,MAAa,UAAU;IAIrB;;;;;;OAMG;IACH,YAAY,MAAc,EAAE,UAAsB;QAChD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,UAAsB;QAClC,IAAI,UAAU,YAAY,iBAAO,EAAE;YACjC,OAAO,GAAG,IAAI,CAAC,MAAM,sBAAsB,UAAU,CAAC,eAAe,EAAE,kBAAkB,UAAU,CAAC,SAAS,EAAE,EAAE,CAAC;SACnH;aAAM;YACL,OAAO,GAAG,IAAI,CAAC,MAAM,4BAA4B,CAAC;SACnD;IACH,CAAC;IAED;;;;OAIG;IACI,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;CACF;AA/CD,gCA+CC","sourcesContent":["import {Observer, Observable} from './interfaces';\nimport {Revista} from './revista';\n\n/**\n * Clase que representa suscriptores.\n * @class Suscriptor\n * @implements {Observer}\n * @attributes {string} nombre - Nombre del suscriptor.\n * @attributes {Observable} observable - Objeto al que se suscribe.\n */\nexport class Suscriptor implements Observer {\n  private nombre: string;\n  private observable: Observable;\n\n  /**\n   * Crea una nueva instancia de la clase Suscriptor.\n   * @param {string} nombre - Nombre del suscriptor.\n   * @param {Observable} observable - Objeto al que se suscribe\n   * @memberof Suscriptor\n   * @constructor\n   */\n  constructor(nombre: string, observable: Observable) {\n    this.nombre = nombre;\n    this.observable = observable;\n  }\n\n  /**\n   * Actualiza el suscriptor con la información de objeto suscrito\n   * @param {Observable} observable - Observable a la que se suscribe.\n   * @returns {string} Mensaje de notificación.\n   * @memberof Suscriptor\n   */\n  public update(observable: Observable): string {\n    if (observable instanceof Revista) {\n      return `${this.nombre} recibió el número ${observable.getNumeroActual()} de la revista ${observable.getNombre()}`;\n    } else {\n      return `${this.nombre} recibió una actualización`;\n    }\n  }\n\n  /**\n   * Devuelve el nombre del suscriptor.\n   * @returns {string} Nombre del suscriptor.\n   * @memberof Suscriptor\n   */\n  public getNombre(): string {\n    return this.nombre;\n  }\n\n  /**\n   * Devuelve el observable al que se suscribe.\n   * @returns {Observable} Observable al que se suscribe.\n   * @memberof Suscriptor\n   */\n  public getObserver(): Observable {\n    return this.observable;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c5c21fd2a5ff4105bb59c52dce98f7b4cb926450","contentHash":"ed524cc0482036d6aabd201e83ba2dcecac59a42ff2d5382fbda251e2f6fd673"}}